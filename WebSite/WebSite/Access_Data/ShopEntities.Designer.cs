//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("ShopDBModel", "FK_SecCategories_Categories", "Categories", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NFCShoppingWebSite.Access_Data.Category), "SecCategories", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NFCShoppingWebSite.Access_Data.SecCategory), true)]
[assembly: EdmRelationshipAttribute("ShopDBModel", "FK_DiscountInformation_Discounts", "Discounts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NFCShoppingWebSite.Access_Data.Discount), "DiscountItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NFCShoppingWebSite.Access_Data.DiscountItem), true)]
[assembly: EdmRelationshipAttribute("ShopDBModel", "FK_DiscountInformation_Products", "Products", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NFCShoppingWebSite.Access_Data.Product), "DiscountItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NFCShoppingWebSite.Access_Data.DiscountItem), true)]
[assembly: EdmRelationshipAttribute("ShopDBModel", "FK_Products_SecCategories", "SecCategories", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NFCShoppingWebSite.Access_Data.SecCategory), "Products", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NFCShoppingWebSite.Access_Data.Product), true)]
[assembly: EdmRelationshipAttribute("ShopDBModel", "FK_Reviews_Products", "Products", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NFCShoppingWebSite.Access_Data.Product), "Reviews", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NFCShoppingWebSite.Access_Data.Review), true)]
[assembly: EdmRelationshipAttribute("ShopDBModel", "FK_Reviews_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NFCShoppingWebSite.Access_Data.User), "Reviews", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NFCShoppingWebSite.Access_Data.Review), true)]
[assembly: EdmRelationshipAttribute("ShopDBModel", "FK_Suggestions_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NFCShoppingWebSite.Access_Data.User), "Suggestions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NFCShoppingWebSite.Access_Data.Suggestion), true)]

#endregion

namespace NFCShoppingWebSite.Access_Data
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class ShopEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“ShopEntities”部分中的连接字符串初始化新 ShopEntities 对象。
        /// </summary>
        public ShopEntities() : base("name=ShopEntities", "ShopEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 ShopEntities 对象。
        /// </summary>
        public ShopEntities(string connectionString) : base(connectionString, "ShopEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 ShopEntities 对象。
        /// </summary>
        public ShopEntities(EntityConnection connection) : base(connection, "ShopEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<DiscountItem> DiscountItems
        {
            get
            {
                if ((_DiscountItems == null))
                {
                    _DiscountItems = base.CreateObjectSet<DiscountItem>("DiscountItems");
                }
                return _DiscountItems;
            }
        }
        private ObjectSet<DiscountItem> _DiscountItems;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Discount> Discounts
        {
            get
            {
                if ((_Discounts == null))
                {
                    _Discounts = base.CreateObjectSet<Discount>("Discounts");
                }
                return _Discounts;
            }
        }
        private ObjectSet<Discount> _Discounts;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Product> Products
        {
            get
            {
                if ((_Products == null))
                {
                    _Products = base.CreateObjectSet<Product>("Products");
                }
                return _Products;
            }
        }
        private ObjectSet<Product> _Products;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Review> Reviews
        {
            get
            {
                if ((_Reviews == null))
                {
                    _Reviews = base.CreateObjectSet<Review>("Reviews");
                }
                return _Reviews;
            }
        }
        private ObjectSet<Review> _Reviews;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<SecCategory> SecCategories
        {
            get
            {
                if ((_SecCategories == null))
                {
                    _SecCategories = base.CreateObjectSet<SecCategory>("SecCategories");
                }
                return _SecCategories;
            }
        }
        private ObjectSet<SecCategory> _SecCategories;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Suggestion> Suggestions
        {
            get
            {
                if ((_Suggestions == null))
                {
                    _Suggestions = base.CreateObjectSet<Suggestion>("Suggestions");
                }
                return _Suggestions;
            }
        }
        private ObjectSet<Suggestion> _Suggestions;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 用于向 Categories EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// 用于向 DiscountItems EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToDiscountItems(DiscountItem discountItem)
        {
            base.AddObject("DiscountItems", discountItem);
        }
    
        /// <summary>
        /// 用于向 Discounts EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToDiscounts(Discount discount)
        {
            base.AddObject("Discounts", discount);
        }
    
        /// <summary>
        /// 用于向 Products EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToProducts(Product product)
        {
            base.AddObject("Products", product);
        }
    
        /// <summary>
        /// 用于向 Reviews EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToReviews(Review review)
        {
            base.AddObject("Reviews", review);
        }
    
        /// <summary>
        /// 用于向 SecCategories EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSecCategories(SecCategory secCategory)
        {
            base.AddObject("SecCategories", secCategory);
        }
    
        /// <summary>
        /// 用于向 Suggestions EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSuggestions(Suggestion suggestion)
        {
            base.AddObject("Suggestions", suggestion);
        }
    
        /// <summary>
        /// 用于向 Users EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion
    }
    

    #endregion
    
    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShopDBModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Category 对象。
        /// </summary>
        /// <param name="categoryID">categoryID 属性的初始值。</param>
        /// <param name="categoryName">categoryName 属性的初始值。</param>
        public static Category CreateCategory(global::System.Int32 categoryID, global::System.String categoryName)
        {
            Category category = new Category();
            category.categoryID = categoryID;
            category.categoryName = categoryName;
            return category;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 categoryID
        {
            get
            {
                return _categoryID;
            }
            set
            {
                if (_categoryID != value)
                {
                    OncategoryIDChanging(value);
                    ReportPropertyChanging("categoryID");
                    _categoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("categoryID");
                    OncategoryIDChanged();
                }
            }
        }
        private global::System.Int32 _categoryID;
        partial void OncategoryIDChanging(global::System.Int32 value);
        partial void OncategoryIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String categoryName
        {
            get
            {
                return _categoryName;
            }
            set
            {
                OncategoryNameChanging(value);
                ReportPropertyChanging("categoryName");
                _categoryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("categoryName");
                OncategoryNameChanged();
            }
        }
        private global::System.String _categoryName;
        partial void OncategoryNameChanging(global::System.String value);
        partial void OncategoryNameChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShopDBModel", "FK_SecCategories_Categories", "SecCategories")]
        public EntityCollection<SecCategory> SecCategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SecCategory>("ShopDBModel.FK_SecCategories_Categories", "SecCategories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SecCategory>("ShopDBModel.FK_SecCategories_Categories", "SecCategories", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShopDBModel", Name="Discount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Discount : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Discount 对象。
        /// </summary>
        /// <param name="discountID">discountID 属性的初始值。</param>
        /// <param name="description">description 属性的初始值。</param>
        /// <param name="startDate">startDate 属性的初始值。</param>
        /// <param name="endDate">endDate 属性的初始值。</param>
        public static Discount CreateDiscount(global::System.Int32 discountID, global::System.String description, global::System.DateTime startDate, global::System.DateTime endDate)
        {
            Discount discount = new Discount();
            discount.discountID = discountID;
            discount.description = description;
            discount.startDate = startDate;
            discount.endDate = endDate;
            return discount;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 discountID
        {
            get
            {
                return _discountID;
            }
            set
            {
                if (_discountID != value)
                {
                    OndiscountIDChanging(value);
                    ReportPropertyChanging("discountID");
                    _discountID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("discountID");
                    OndiscountIDChanged();
                }
            }
        }
        private global::System.Int32 _discountID;
        partial void OndiscountIDChanging(global::System.Int32 value);
        partial void OndiscountIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime startDate
        {
            get
            {
                return _startDate;
            }
            set
            {
                OnstartDateChanging(value);
                ReportPropertyChanging("startDate");
                _startDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("startDate");
                OnstartDateChanged();
            }
        }
        private global::System.DateTime _startDate;
        partial void OnstartDateChanging(global::System.DateTime value);
        partial void OnstartDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime endDate
        {
            get
            {
                return _endDate;
            }
            set
            {
                OnendDateChanging(value);
                ReportPropertyChanging("endDate");
                _endDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("endDate");
                OnendDateChanged();
            }
        }
        private global::System.DateTime _endDate;
        partial void OnendDateChanging(global::System.DateTime value);
        partial void OnendDateChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShopDBModel", "FK_DiscountInformation_Discounts", "DiscountItems")]
        public EntityCollection<DiscountItem> DiscountItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DiscountItem>("ShopDBModel.FK_DiscountInformation_Discounts", "DiscountItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DiscountItem>("ShopDBModel.FK_DiscountInformation_Discounts", "DiscountItems", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShopDBModel", Name="DiscountItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DiscountItem : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 DiscountItem 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        /// <param name="discountID">discountID 属性的初始值。</param>
        /// <param name="productID">productID 属性的初始值。</param>
        /// <param name="discountPercent">discountPercent 属性的初始值。</param>
        /// <param name="description">description 属性的初始值。</param>
        public static DiscountItem CreateDiscountItem(global::System.Int32 id, global::System.Int32 discountID, global::System.Int32 productID, global::System.Single discountPercent, global::System.String description)
        {
            DiscountItem discountItem = new DiscountItem();
            discountItem.id = id;
            discountItem.discountID = discountID;
            discountItem.productID = productID;
            discountItem.discountPercent = discountPercent;
            discountItem.description = description;
            return discountItem;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 discountID
        {
            get
            {
                return _discountID;
            }
            set
            {
                OndiscountIDChanging(value);
                ReportPropertyChanging("discountID");
                _discountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("discountID");
                OndiscountIDChanged();
            }
        }
        private global::System.Int32 _discountID;
        partial void OndiscountIDChanging(global::System.Int32 value);
        partial void OndiscountIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 productID
        {
            get
            {
                return _productID;
            }
            set
            {
                OnproductIDChanging(value);
                ReportPropertyChanging("productID");
                _productID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("productID");
                OnproductIDChanged();
            }
        }
        private global::System.Int32 _productID;
        partial void OnproductIDChanging(global::System.Int32 value);
        partial void OnproductIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single discountPercent
        {
            get
            {
                return _discountPercent;
            }
            set
            {
                OndiscountPercentChanging(value);
                ReportPropertyChanging("discountPercent");
                _discountPercent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("discountPercent");
                OndiscountPercentChanged();
            }
        }
        private global::System.Single _discountPercent;
        partial void OndiscountPercentChanging(global::System.Single value);
        partial void OndiscountPercentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShopDBModel", "FK_DiscountInformation_Discounts", "Discounts")]
        public Discount Discount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Discount>("ShopDBModel.FK_DiscountInformation_Discounts", "Discounts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Discount>("ShopDBModel.FK_DiscountInformation_Discounts", "Discounts").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        public EntityReference<Discount> DiscountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Discount>("ShopDBModel.FK_DiscountInformation_Discounts", "Discounts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Discount>("ShopDBModel.FK_DiscountInformation_Discounts", "Discounts", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShopDBModel", "FK_DiscountInformation_Products", "Products")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ShopDBModel.FK_DiscountInformation_Products", "Products").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ShopDBModel.FK_DiscountInformation_Products", "Products").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ShopDBModel.FK_DiscountInformation_Products", "Products");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("ShopDBModel.FK_DiscountInformation_Products", "Products", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShopDBModel", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Product 对象。
        /// </summary>
        /// <param name="productID">productID 属性的初始值。</param>
        /// <param name="secCategoryID">secCategoryID 属性的初始值。</param>
        /// <param name="barCode">barCode 属性的初始值。</param>
        /// <param name="productName">productName 属性的初始值。</param>
        /// <param name="price">price 属性的初始值。</param>
        /// <param name="description">description 属性的初始值。</param>
        public static Product CreateProduct(global::System.Int32 productID, global::System.Int32 secCategoryID, global::System.String barCode, global::System.String productName, global::System.Decimal price, global::System.String description)
        {
            Product product = new Product();
            product.productID = productID;
            product.secCategoryID = secCategoryID;
            product.barCode = barCode;
            product.productName = productName;
            product.price = price;
            product.description = description;
            return product;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 productID
        {
            get
            {
                return _productID;
            }
            set
            {
                if (_productID != value)
                {
                    OnproductIDChanging(value);
                    ReportPropertyChanging("productID");
                    _productID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("productID");
                    OnproductIDChanged();
                }
            }
        }
        private global::System.Int32 _productID;
        partial void OnproductIDChanging(global::System.Int32 value);
        partial void OnproductIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 secCategoryID
        {
            get
            {
                return _secCategoryID;
            }
            set
            {
                OnsecCategoryIDChanging(value);
                ReportPropertyChanging("secCategoryID");
                _secCategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("secCategoryID");
                OnsecCategoryIDChanged();
            }
        }
        private global::System.Int32 _secCategoryID;
        partial void OnsecCategoryIDChanging(global::System.Int32 value);
        partial void OnsecCategoryIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String barCode
        {
            get
            {
                return _barCode;
            }
            set
            {
                OnbarCodeChanging(value);
                ReportPropertyChanging("barCode");
                _barCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("barCode");
                OnbarCodeChanged();
            }
        }
        private global::System.String _barCode;
        partial void OnbarCodeChanging(global::System.String value);
        partial void OnbarCodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String productName
        {
            get
            {
                return _productName;
            }
            set
            {
                OnproductNameChanging(value);
                ReportPropertyChanging("productName");
                _productName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("productName");
                OnproductNameChanged();
            }
        }
        private global::System.String _productName;
        partial void OnproductNameChanging(global::System.String value);
        partial void OnproductNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal price
        {
            get
            {
                return _price;
            }
            set
            {
                OnpriceChanging(value);
                ReportPropertyChanging("price");
                _price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("price");
                OnpriceChanged();
            }
        }
        private global::System.Decimal _price;
        partial void OnpriceChanging(global::System.Decimal value);
        partial void OnpriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String brand
        {
            get
            {
                return _brand;
            }
            set
            {
                OnbrandChanging(value);
                ReportPropertyChanging("brand");
                _brand = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("brand");
                OnbrandChanged();
            }
        }
        private global::System.String _brand;
        partial void OnbrandChanging(global::System.String value);
        partial void OnbrandChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String location
        {
            get
            {
                return _location;
            }
            set
            {
                OnlocationChanging(value);
                ReportPropertyChanging("location");
                _location = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("location");
                OnlocationChanged();
            }
        }
        private global::System.String _location;
        partial void OnlocationChanging(global::System.String value);
        partial void OnlocationChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String imageURL
        {
            get
            {
                return _imageURL;
            }
            set
            {
                OnimageURLChanging(value);
                ReportPropertyChanging("imageURL");
                _imageURL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("imageURL");
                OnimageURLChanged();
            }
        }
        private global::System.String _imageURL;
        partial void OnimageURLChanging(global::System.String value);
        partial void OnimageURLChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShopDBModel", "FK_DiscountInformation_Products", "DiscountItems")]
        public EntityCollection<DiscountItem> DiscountItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DiscountItem>("ShopDBModel.FK_DiscountInformation_Products", "DiscountItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DiscountItem>("ShopDBModel.FK_DiscountInformation_Products", "DiscountItems", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShopDBModel", "FK_Products_SecCategories", "SecCategories")]
        public SecCategory SecCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecCategory>("ShopDBModel.FK_Products_SecCategories", "SecCategories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecCategory>("ShopDBModel.FK_Products_SecCategories", "SecCategories").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        public EntityReference<SecCategory> SecCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecCategory>("ShopDBModel.FK_Products_SecCategories", "SecCategories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecCategory>("ShopDBModel.FK_Products_SecCategories", "SecCategories", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShopDBModel", "FK_Reviews_Products", "Reviews")]
        public EntityCollection<Review> Reviews
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Review>("ShopDBModel.FK_Reviews_Products", "Reviews");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Review>("ShopDBModel.FK_Reviews_Products", "Reviews", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShopDBModel", Name="Review")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Review : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Review 对象。
        /// </summary>
        /// <param name="reviewID">reviewID 属性的初始值。</param>
        /// <param name="userID">userID 属性的初始值。</param>
        /// <param name="productID">productID 属性的初始值。</param>
        /// <param name="comment">comment 属性的初始值。</param>
        /// <param name="rating">rating 属性的初始值。</param>
        /// <param name="createAt">createAt 属性的初始值。</param>
        public static Review CreateReview(global::System.Int32 reviewID, global::System.Int32 userID, global::System.Int32 productID, global::System.String comment, global::System.Int32 rating, global::System.DateTime createAt)
        {
            Review review = new Review();
            review.reviewID = reviewID;
            review.userID = userID;
            review.productID = productID;
            review.comment = comment;
            review.rating = rating;
            review.createAt = createAt;
            return review;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 reviewID
        {
            get
            {
                return _reviewID;
            }
            set
            {
                if (_reviewID != value)
                {
                    OnreviewIDChanging(value);
                    ReportPropertyChanging("reviewID");
                    _reviewID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("reviewID");
                    OnreviewIDChanged();
                }
            }
        }
        private global::System.Int32 _reviewID;
        partial void OnreviewIDChanging(global::System.Int32 value);
        partial void OnreviewIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 userID
        {
            get
            {
                return _userID;
            }
            set
            {
                OnuserIDChanging(value);
                ReportPropertyChanging("userID");
                _userID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("userID");
                OnuserIDChanged();
            }
        }
        private global::System.Int32 _userID;
        partial void OnuserIDChanging(global::System.Int32 value);
        partial void OnuserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 productID
        {
            get
            {
                return _productID;
            }
            set
            {
                OnproductIDChanging(value);
                ReportPropertyChanging("productID");
                _productID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("productID");
                OnproductIDChanged();
            }
        }
        private global::System.Int32 _productID;
        partial void OnproductIDChanging(global::System.Int32 value);
        partial void OnproductIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String comment
        {
            get
            {
                return _comment;
            }
            set
            {
                OncommentChanging(value);
                ReportPropertyChanging("comment");
                _comment = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("comment");
                OncommentChanged();
            }
        }
        private global::System.String _comment;
        partial void OncommentChanging(global::System.String value);
        partial void OncommentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 rating
        {
            get
            {
                return _rating;
            }
            set
            {
                OnratingChanging(value);
                ReportPropertyChanging("rating");
                _rating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rating");
                OnratingChanged();
            }
        }
        private global::System.Int32 _rating;
        partial void OnratingChanging(global::System.Int32 value);
        partial void OnratingChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime createAt
        {
            get
            {
                return _createAt;
            }
            set
            {
                OncreateAtChanging(value);
                ReportPropertyChanging("createAt");
                _createAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("createAt");
                OncreateAtChanged();
            }
        }
        private global::System.DateTime _createAt;
        partial void OncreateAtChanging(global::System.DateTime value);
        partial void OncreateAtChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShopDBModel", "FK_Reviews_Products", "Products")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ShopDBModel.FK_Reviews_Products", "Products").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ShopDBModel.FK_Reviews_Products", "Products").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ShopDBModel.FK_Reviews_Products", "Products");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("ShopDBModel.FK_Reviews_Products", "Products", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShopDBModel", "FK_Reviews_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ShopDBModel.FK_Reviews_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ShopDBModel.FK_Reviews_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ShopDBModel.FK_Reviews_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ShopDBModel.FK_Reviews_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShopDBModel", Name="SecCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SecCategory : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 SecCategory 对象。
        /// </summary>
        /// <param name="secCategoryID">secCategoryID 属性的初始值。</param>
        /// <param name="categoryID">categoryID 属性的初始值。</param>
        /// <param name="secCategoryName">secCategoryName 属性的初始值。</param>
        public static SecCategory CreateSecCategory(global::System.Int32 secCategoryID, global::System.Int32 categoryID, global::System.String secCategoryName)
        {
            SecCategory secCategory = new SecCategory();
            secCategory.secCategoryID = secCategoryID;
            secCategory.categoryID = categoryID;
            secCategory.secCategoryName = secCategoryName;
            return secCategory;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 secCategoryID
        {
            get
            {
                return _secCategoryID;
            }
            set
            {
                if (_secCategoryID != value)
                {
                    OnsecCategoryIDChanging(value);
                    ReportPropertyChanging("secCategoryID");
                    _secCategoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("secCategoryID");
                    OnsecCategoryIDChanged();
                }
            }
        }
        private global::System.Int32 _secCategoryID;
        partial void OnsecCategoryIDChanging(global::System.Int32 value);
        partial void OnsecCategoryIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 categoryID
        {
            get
            {
                return _categoryID;
            }
            set
            {
                OncategoryIDChanging(value);
                ReportPropertyChanging("categoryID");
                _categoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("categoryID");
                OncategoryIDChanged();
            }
        }
        private global::System.Int32 _categoryID;
        partial void OncategoryIDChanging(global::System.Int32 value);
        partial void OncategoryIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String secCategoryName
        {
            get
            {
                return _secCategoryName;
            }
            set
            {
                OnsecCategoryNameChanging(value);
                ReportPropertyChanging("secCategoryName");
                _secCategoryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("secCategoryName");
                OnsecCategoryNameChanged();
            }
        }
        private global::System.String _secCategoryName;
        partial void OnsecCategoryNameChanging(global::System.String value);
        partial void OnsecCategoryNameChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShopDBModel", "FK_SecCategories_Categories", "Categories")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("ShopDBModel.FK_SecCategories_Categories", "Categories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("ShopDBModel.FK_SecCategories_Categories", "Categories").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("ShopDBModel.FK_SecCategories_Categories", "Categories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("ShopDBModel.FK_SecCategories_Categories", "Categories", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShopDBModel", "FK_Products_SecCategories", "Products")]
        public EntityCollection<Product> Products
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("ShopDBModel.FK_Products_SecCategories", "Products");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("ShopDBModel.FK_Products_SecCategories", "Products", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShopDBModel", Name="Suggestion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Suggestion : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Suggestion 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        /// <param name="description">description 属性的初始值。</param>
        /// <param name="date">date 属性的初始值。</param>
        public static Suggestion CreateSuggestion(global::System.Int32 id, global::System.String description, global::System.DateTime date)
        {
            Suggestion suggestion = new Suggestion();
            suggestion.id = id;
            suggestion.description = description;
            suggestion.date = date;
            return suggestion;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> userID
        {
            get
            {
                return _userID;
            }
            set
            {
                OnuserIDChanging(value);
                ReportPropertyChanging("userID");
                _userID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("userID");
                OnuserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _userID;
        partial void OnuserIDChanging(Nullable<global::System.Int32> value);
        partial void OnuserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime date
        {
            get
            {
                return _date;
            }
            set
            {
                OndateChanging(value);
                ReportPropertyChanging("date");
                _date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("date");
                OndateChanged();
            }
        }
        private global::System.DateTime _date;
        partial void OndateChanging(global::System.DateTime value);
        partial void OndateChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShopDBModel", "FK_Suggestions_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ShopDBModel.FK_Suggestions_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ShopDBModel.FK_Suggestions_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ShopDBModel.FK_Suggestions_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ShopDBModel.FK_Suggestions_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShopDBModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 User 对象。
        /// </summary>
        /// <param name="userID">userID 属性的初始值。</param>
        /// <param name="userName">userName 属性的初始值。</param>
        /// <param name="userPassword">userPassword 属性的初始值。</param>
        /// <param name="visitedTimes">visitedTimes 属性的初始值。</param>
        /// <param name="lastVisitedDate">lastVisitedDate 属性的初始值。</param>
        public static User CreateUser(global::System.Int32 userID, global::System.String userName, global::System.String userPassword, global::System.Int32 visitedTimes, global::System.DateTime lastVisitedDate)
        {
            User user = new User();
            user.userID = userID;
            user.userName = userName;
            user.userPassword = userPassword;
            user.visitedTimes = visitedTimes;
            user.lastVisitedDate = lastVisitedDate;
            return user;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 userID
        {
            get
            {
                return _userID;
            }
            set
            {
                if (_userID != value)
                {
                    OnuserIDChanging(value);
                    ReportPropertyChanging("userID");
                    _userID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("userID");
                    OnuserIDChanged();
                }
            }
        }
        private global::System.Int32 _userID;
        partial void OnuserIDChanging(global::System.Int32 value);
        partial void OnuserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String userName
        {
            get
            {
                return _userName;
            }
            set
            {
                OnuserNameChanging(value);
                ReportPropertyChanging("userName");
                _userName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("userName");
                OnuserNameChanged();
            }
        }
        private global::System.String _userName;
        partial void OnuserNameChanging(global::System.String value);
        partial void OnuserNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        public global::System.String userPassword
        {
            get
            {
                return _userPassword;
            }
            set
            {
                OnuserPasswordChanging(value);
                ReportPropertyChanging("userPassword");
                _userPassword = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("userPassword");
                OnuserPasswordChanged();
            }
        }
        private global::System.String _userPassword;
        partial void OnuserPasswordChanging(global::System.String value);
        partial void OnuserPasswordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> gender
        {
            get
            {
                return _gender;
            }
            set
            {
                OngenderChanging(value);
                ReportPropertyChanging("gender");
                _gender = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("gender");
                OngenderChanged();
            }
        }
        private Nullable<global::System.Int32> _gender;
        partial void OngenderChanging(Nullable<global::System.Int32> value);
        partial void OngenderChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 visitedTimes
        {
            get
            {
                return _visitedTimes;
            }
            set
            {
                OnvisitedTimesChanging(value);
                ReportPropertyChanging("visitedTimes");
                _visitedTimes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("visitedTimes");
                OnvisitedTimesChanged();
            }
        }
        private global::System.Int32 _visitedTimes;
        partial void OnvisitedTimesChanging(global::System.Int32 value);
        partial void OnvisitedTimesChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime lastVisitedDate
        {
            get
            {
                return _lastVisitedDate;
            }
            set
            {
                OnlastVisitedDateChanging(value);
                ReportPropertyChanging("lastVisitedDate");
                _lastVisitedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("lastVisitedDate");
                OnlastVisitedDateChanged();
            }
        }
        private global::System.DateTime _lastVisitedDate;
        partial void OnlastVisitedDateChanging(global::System.DateTime value);
        partial void OnlastVisitedDateChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShopDBModel", "FK_Reviews_Users", "Reviews")]
        public EntityCollection<Review> Reviews
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Review>("ShopDBModel.FK_Reviews_Users", "Reviews");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Review>("ShopDBModel.FK_Reviews_Users", "Reviews", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShopDBModel", "FK_Suggestions_Users", "Suggestions")]
        public EntityCollection<Suggestion> Suggestions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Suggestion>("ShopDBModel.FK_Suggestions_Users", "Suggestions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Suggestion>("ShopDBModel.FK_Suggestions_Users", "Suggestions", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
